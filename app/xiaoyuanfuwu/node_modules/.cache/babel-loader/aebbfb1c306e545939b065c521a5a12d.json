{"remainingRequest":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\rest-api\\api.js","dependencies":[{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\rest-api\\api.js","mtime":1550127914000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"F:\\\\xiaoyuanfuwu\\\\app\\\\xiaoyuanfuwu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"F:\\\\xiaoyuanfuwu\\\\app\\\\xiaoyuanfuwu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport qs from 'qs'; // axios 配置\n\naxios.defaults.timeout = 30000; //请求超时时间，默认30s\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=UTF-8'; //POST传参序列化\n\naxios.interceptors.request.use(function (config) {\n  if (config.method === 'post') {\n    config.data = qs.stringify(config.data);\n  }\n\n  return config;\n}, function (error) {\n  // _.toast(\"错误的传参\", 'fail');\n  return _Promise.reject(error);\n}); //返回状态判断\n// axios.interceptors.response.use((res) => {\n//   if (!res.data.success) {\n//     // _.toast(res.data.msg);\n//     return Promise.reject(res);\n//   }\n//   return res;\n// }, (error) => {\n//   // _.toast(\"网络异常\", 'fail');\n//   return Promise.reject(error);\n// });\n\nexport function fetch(url, headers, params, method) {\n  if (method.toLowerCase() === 'post') {\n    return new _Promise(function (resolve, reject) {\n      _Object$assign(axios.defaults.headers.common, headers); // axios.defaults.headers.common['token'] = AUTH_TOKEN;\n\n\n      axios.post(url, params).then(function (response) {\n        resolve(response.data);\n      }, function (err) {\n        reject(err);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  } else if (method.toLowerCase() === 'get') {\n    return new _Promise(function (resolve, reject) {\n      _Object$assign(axios.defaults.headers.common, headers); // axios.defaults.headers.common['token'] = AUTH_TOKEN;\n\n\n      axios.get(url, params).then(function (response) {\n        resolve(response.data);\n      }, function (err) {\n        reject(err);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n}\nexport default {\n  POST: function POST(url) {\n    var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return fetch(url, headers, params, 'post');\n  },\n  GET: function GET(url) {\n    var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return fetch(url, headers, params, 'get');\n  }\n};",{"version":3,"sources":["F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\rest-api\\api.js"],"names":["axios","qs","defaults","timeout","headers","post","interceptors","request","use","config","method","data","stringify","error","reject","fetch","url","params","toLowerCase","resolve","common","then","response","err","catch","get","POST","GET"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf,C,CAEA;;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,KAAzB,C,CAAgC;;AAChCH,KAAK,CAACE,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IACE,iDADF,C,CAGA;;AACAL,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACR,MAAIA,MAAM,CAACC,MAAP,KAAkB,MAAtB,EAA8B;AAC5BD,IAAAA,MAAM,CAACE,IAAP,GAAcV,EAAE,CAACW,SAAH,CAAaH,MAAM,CAACE,IAApB,CAAd;AACD;;AACD,SAAOF,MAAP;AACD,CANH,EAOE,UAAAI,KAAK,EAAI;AACP;AACA,SAAO,SAAQC,MAAR,CAAeD,KAAf,CAAP;AACD,CAVH,E,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASE,KAAT,CAAeC,GAAf,EAAoBZ,OAApB,EAA6Ba,MAA7B,EAAqCP,MAArC,EAA6C;AAClD,MAAIA,MAAM,CAACQ,WAAP,OAAyB,MAA7B,EAAqC;AACnC,WAAO,aAAY,UAACC,OAAD,EAAUL,MAAV,EAAqB;AACtC,qBAAcd,KAAK,CAACE,QAAN,CAAeE,OAAf,CAAuBgB,MAArC,EAA6ChB,OAA7C,EADsC,CAEtC;;;AACAJ,MAAAA,KAAK,CACFK,IADH,CACQW,GADR,EACaC,MADb,EAEGI,IAFH,CAGI,UAAAC,QAAQ,EAAI;AACVH,QAAAA,OAAO,CAACG,QAAQ,CAACX,IAAV,CAAP;AACD,OALL,EAMI,UAAAY,GAAG,EAAI;AACLT,QAAAA,MAAM,CAACS,GAAD,CAAN;AACD,OARL,EAUGC,KAVH,CAUS,UAAAX,KAAK,EAAI;AACdC,QAAAA,MAAM,CAACD,KAAD,CAAN;AACD,OAZH;AAaD,KAhBM,CAAP;AAiBD,GAlBD,MAkBO,IAAIH,MAAM,CAACQ,WAAP,OAAyB,KAA7B,EAAoC;AACzC,WAAO,aAAY,UAACC,OAAD,EAAUL,MAAV,EAAqB;AACtC,qBAAcd,KAAK,CAACE,QAAN,CAAeE,OAAf,CAAuBgB,MAArC,EAA6ChB,OAA7C,EADsC,CAEtC;;;AACAJ,MAAAA,KAAK,CACFyB,GADH,CACOT,GADP,EACYC,MADZ,EAEGI,IAFH,CAGI,UAAAC,QAAQ,EAAI;AACVH,QAAAA,OAAO,CAACG,QAAQ,CAACX,IAAV,CAAP;AACD,OALL,EAMI,UAAAY,GAAG,EAAI;AACLT,QAAAA,MAAM,CAACS,GAAD,CAAN;AACD,OARL,EAUGC,KAVH,CAUS,UAAAX,KAAK,EAAI;AACdC,QAAAA,MAAM,CAACD,KAAD,CAAN;AACD,OAZH;AAaD,KAhBM,CAAP;AAiBD;AACF;AAED,eAAe;AACba,EAAAA,IADa,gBACRV,GADQ,EACwB;AAAA,QAA3BZ,OAA2B,uEAAjB,EAAiB;AAAA,QAAba,MAAa,uEAAJ,EAAI;AACnC,WAAOF,KAAK,CAACC,GAAD,EAAMZ,OAAN,EAAea,MAAf,EAAuB,MAAvB,CAAZ;AACD,GAHY;AAKbU,EAAAA,GALa,eAKTX,GALS,EAKuB;AAAA,QAA3BZ,OAA2B,uEAAjB,EAAiB;AAAA,QAAba,MAAa,uEAAJ,EAAI;AAClC,WAAOF,KAAK,CAACC,GAAD,EAAMZ,OAAN,EAAea,MAAf,EAAuB,KAAvB,CAAZ;AACD;AAPY,CAAf","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\n// axios 配置\naxios.defaults.timeout = 30000; //请求超时时间，默认30s\naxios.defaults.headers.post['Content-Type'] =\n  'application/x-www-form-urlencoded;charset=UTF-8';\n\n//POST传参序列化\naxios.interceptors.request.use(\n  config => {\n    if (config.method === 'post') {\n      config.data = qs.stringify(config.data);\n    }\n    return config;\n  },\n  error => {\n    // _.toast(\"错误的传参\", 'fail');\n    return Promise.reject(error);\n  }\n);\n\n//返回状态判断\n// axios.interceptors.response.use((res) => {\n//   if (!res.data.success) {\n//     // _.toast(res.data.msg);\n//     return Promise.reject(res);\n//   }\n//   return res;\n// }, (error) => {\n//   // _.toast(\"网络异常\", 'fail');\n//   return Promise.reject(error);\n// });\n\nexport function fetch(url, headers, params, method) {\n  if (method.toLowerCase() === 'post') {\n    return new Promise((resolve, reject) => {\n      Object.assign(axios.defaults.headers.common, headers);\n      // axios.defaults.headers.common['token'] = AUTH_TOKEN;\n      axios\n        .post(url, params)\n        .then(\n          response => {\n            resolve(response.data);\n          },\n          err => {\n            reject(err);\n          }\n        )\n        .catch(error => {\n          reject(error);\n        });\n    });\n  } else if (method.toLowerCase() === 'get') {\n    return new Promise((resolve, reject) => {\n      Object.assign(axios.defaults.headers.common, headers);\n      // axios.defaults.headers.common['token'] = AUTH_TOKEN;\n      axios\n        .get(url, params)\n        .then(\n          response => {\n            resolve(response.data);\n          },\n          err => {\n            reject(err);\n          }\n        )\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n}\n\nexport default {\n  POST(url, headers = {}, params = {}) {\n    return fetch(url, headers, params, 'post');\n  },\n\n  GET(url, headers = {}, params = {}) {\n    return fetch(url, headers, params, 'get');\n  }\n};\n"]}]}