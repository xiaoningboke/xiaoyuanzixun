{"remainingRequest":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\index.js","dependencies":[{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\index.js","mtime":1548914458000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"F:\\\\xiaoyuanfuwu\\\\app\\\\xiaoyuanfuwu\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\xiaoyuanfuwu\\\\app\\\\xiaoyuanfuwu\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport Routes from './routes';\nimport Navigator from './navigator';\nimport NavComponent from './components/Navigation';\nimport { genKey, isObjEqual } from './utils';\nexport default {\n  install: function install(Vue) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        router = _ref.router,\n        store = _ref.store,\n        _ref$moduleName = _ref.moduleName,\n        moduleName = _ref$moduleName === void 0 ? 'navigation' : _ref$moduleName,\n        _ref$keyName = _ref.keyName,\n        keyName = _ref$keyName === void 0 ? 'VNK' : _ref$keyName;\n\n    if (!router) {\n      console.error('vue-navigation need options: router');\n      return;\n    }\n\n    var bus = new Vue();\n    var navigator = Navigator(bus, store, moduleName, keyName); // hack vue-router replace for replaceFlag\n\n    var routerReplace = router.replace.bind(router);\n    var replaceFlag = false;\n\n    router.replace = function (location, onComplete, onAbort) {\n      replaceFlag = true;\n      routerReplace(location, onComplete, onAbort);\n    }; // init router`s keyName\n\n\n    router.beforeEach(function (to, from, next) {\n      // console.log(to.params, to.query);\n      if (!to.query[keyName]) {\n        var query = _objectSpread({}, from.query, to.query); // go to the same route will be set the same key\n\n\n        if (to.path === from.path && isObjEqual(_objectSpread({}, to.query, _defineProperty({}, keyName, null)), _objectSpread({}, from.query, _defineProperty({}, keyName, null))) && from.query[keyName]) {\n          query[keyName] = from.query[keyName];\n        } else {\n          query[keyName] = genKey();\n        }\n\n        next(_objectSpread({}, to, {\n          path: to.path,\n          query: query,\n          replace: replaceFlag || !from.query[keyName]\n        }));\n      } else {\n        next();\n      }\n    }); // record router change\n\n    router.afterEach(function (to, from) {\n      navigator.record(to, from, replaceFlag);\n      replaceFlag = false;\n    });\n    Vue.component('navigation', NavComponent(keyName));\n    Vue.navigation = Vue.prototype.$navigation = {\n      on: function on(event, callback) {\n        bus.$on(event, callback);\n      },\n      once: function once(event, callback) {\n        bus.$once(event, callback);\n      },\n      off: function off(event, callback) {\n        bus.$off(event, callback);\n      },\n      getRoutes: function getRoutes() {\n        return Routes.slice();\n      },\n      cleanRoutes: function cleanRoutes() {\n        return navigator.reset();\n      }\n    };\n  }\n};",{"version":3,"sources":["F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\index.js"],"names":["Routes","Navigator","NavComponent","genKey","isObjEqual","install","Vue","router","store","moduleName","keyName","console","error","bus","navigator","routerReplace","replace","bind","replaceFlag","location","onComplete","onAbort","beforeEach","to","from","next","query","path","afterEach","record","component","navigation","prototype","$navigation","on","event","callback","$on","once","$once","off","$off","getRoutes","slice","cleanRoutes","reset"],"mappings":"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","sourcesContent":["import Routes from './routes';\nimport Navigator from './navigator';\nimport NavComponent from './components/Navigation';\nimport { genKey, isObjEqual } from './utils';\n\nexport default {\n  install: (\n    Vue,\n    { router, store, moduleName = 'navigation', keyName = 'VNK' } = {}\n  ) => {\n    if (!router) {\n      console.error('vue-navigation need options: router');\n      return;\n    }\n\n    const bus = new Vue();\n    const navigator = Navigator(bus, store, moduleName, keyName);\n\n    // hack vue-router replace for replaceFlag\n    const routerReplace = router.replace.bind(router);\n    let replaceFlag = false;\n    router.replace = (location, onComplete, onAbort) => {\n      replaceFlag = true;\n      routerReplace(location, onComplete, onAbort);\n    };\n\n    // init router`s keyName\n    router.beforeEach((to, from, next) => {\n      // console.log(to.params, to.query);\n      if (!to.query[keyName]) {\n        const query = { ...from.query, ...to.query };\n        // go to the same route will be set the same key\n        if (\n          to.path === from.path &&\n          isObjEqual(\n            { ...to.query, [keyName]: null },\n            { ...from.query, [keyName]: null }\n          ) &&\n          from.query[keyName]\n        ) {\n          query[keyName] = from.query[keyName];\n        } else {\n          query[keyName] = genKey();\n        }\n        next({\n          ...to,\n          path: to.path,\n          query,\n          replace: replaceFlag || !from.query[keyName]\n        });\n      } else {\n        next();\n      }\n    });\n\n    // record router change\n    router.afterEach((to, from) => {\n      navigator.record(to, from, replaceFlag);\n      replaceFlag = false;\n    });\n\n    Vue.component('navigation', NavComponent(keyName));\n\n    Vue.navigation = Vue.prototype.$navigation = {\n      on: (event, callback) => {\n        bus.$on(event, callback);\n      },\n      once: (event, callback) => {\n        bus.$once(event, callback);\n      },\n      off: (event, callback) => {\n        bus.$off(event, callback);\n      },\n      getRoutes: () => Routes.slice(),\n      cleanRoutes: () => navigator.reset()\n    };\n  }\n};\n"]}]}