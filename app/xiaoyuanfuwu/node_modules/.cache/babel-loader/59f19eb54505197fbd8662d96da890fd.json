{"remainingRequest":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\navigator.js","dependencies":[{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\navigator.js","mtime":1548914458000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"F:\\\\xiaoyuanfuwu\\\\app\\\\xiaoyuanfuwu\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.function.name\";\nimport Routes from './routes';\nimport { getKey } from './utils';\nexport default (function (bus, store, moduleName, keyName) {\n  if (store) {\n    store.registerModule(moduleName, {\n      state: {\n        routes: Routes\n      },\n      mutations: {\n        // 完整的参数 (state, {to, from, name})\n        // 因为ESLint的检测，去掉了部分未用的参数\n        'navigation/FORWARD': function navigationFORWARD(state, _ref) {\n          var name = _ref.name;\n          state.routes.push(name);\n        },\n        'navigation/BACK': function navigationBACK(state, _ref2) {\n          var count = _ref2.count;\n          state.routes.splice(state.routes.length - count, count);\n        },\n        'navigation/REPLACE': function navigationREPLACE(state, _ref3) {\n          var name = _ref3.name;\n          state.routes.splice(Routes.length - 1, 1, name);\n        },\n        'navigation/REFRESH': function navigationREFRESH() {},\n        'navigation/RESET': function navigationRESET(state) {\n          state.routes.splice(0, state.routes.length);\n        }\n      }\n    });\n  }\n\n  var forward = function forward(name, toRoute, fromRoute) {\n    var to = {\n      route: toRoute\n    };\n    var from = {\n      route: fromRoute\n    };\n    var routes = store ? store.state[moduleName].routes : Routes; // if from does not exist, it will be set null\n\n    from.name = routes[routes.length - 1] || null;\n    to.name = name;\n    store ? store.commit('navigation/FORWARD', {\n      to: to,\n      from: from,\n      name: name\n    }) : routes.push(name);\n    window.sessionStorage.VUE_NAVIGATION = _JSON$stringify(routes);\n    bus.$emit('forward', to, from);\n  };\n\n  var back = function back(count, toRoute, fromRoute) {\n    var to = {\n      route: toRoute\n    };\n    var from = {\n      route: fromRoute\n    };\n    var routes = store ? store.state[moduleName].routes : Routes;\n    from.name = routes[routes.length - 1];\n    to.name = routes[routes.length - 1 - count];\n    store ? store.commit('navigation/BACK', {\n      to: to,\n      from: from,\n      count: count\n    }) : routes.splice(Routes.length - count, count);\n    window.sessionStorage.VUE_NAVIGATION = _JSON$stringify(routes);\n    bus.$emit('back', to, from);\n  };\n\n  var replace = function replace(name, toRoute, fromRoute) {\n    var to = {\n      route: toRoute\n    };\n    var from = {\n      route: fromRoute\n    };\n    var routes = store ? store.state[moduleName].routes : Routes; // if from does not exist, it will be set null\n\n    from.name = routes[routes.length - 1] || null;\n    to.name = name;\n    store ? store.commit('navigation/REPLACE', {\n      to: to,\n      from: from,\n      name: name\n    }) : routes.splice(Routes.length - 1, 1, name);\n    window.sessionStorage.VUE_NAVIGATION = _JSON$stringify(routes);\n    bus.$emit('replace', to, from);\n  };\n\n  var refresh = function refresh(toRoute, fromRoute) {\n    var to = {\n      route: toRoute\n    };\n    var from = {\n      route: fromRoute\n    };\n    var routes = store ? store.state[moduleName].routes : Routes;\n    to.name = from.name = routes[routes.length - 1];\n    store ? store.commit('navigation/REFRESH', {\n      to: to,\n      from: from\n    }) : null;\n    bus.$emit('refresh', to, from);\n  };\n\n  var reset = function reset() {\n    store ? store.commit('navigation/RESET') : Routes.splice(0, Routes.length);\n    window.sessionStorage.VUE_NAVIGATION = _JSON$stringify([]);\n    bus.$emit('reset');\n  };\n\n  var record = function record(toRoute, fromRoute, replaceFlag) {\n    var name = getKey(toRoute, keyName);\n\n    if (replaceFlag) {\n      replace(name, toRoute, fromRoute);\n    } else {\n      var toIndex = Routes.lastIndexOf(name);\n\n      if (toIndex === -1) {\n        forward(name, toRoute, fromRoute);\n      } else if (toIndex === Routes.length - 1) {\n        refresh(toRoute, fromRoute);\n      } else {\n        back(Routes.length - 1 - toIndex, toRoute, fromRoute);\n      }\n    }\n  };\n\n  return {\n    record: record,\n    reset: reset\n  };\n});",{"version":3,"sources":["F:\\xiaoyuanfuwu\\app\\xiaoyuanfuwu\\src\\components\\navigation\\navigator.js"],"names":["Routes","getKey","bus","store","moduleName","keyName","registerModule","state","routes","mutations","name","push","count","splice","length","forward","toRoute","fromRoute","to","route","from","commit","window","sessionStorage","VUE_NAVIGATION","$emit","back","replace","refresh","reset","record","replaceFlag","toIndex","lastIndexOf"],"mappings":"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","sourcesContent":["import Routes from './routes';\nimport { getKey } from './utils';\n\nexport default (bus, store, moduleName, keyName) => {\n  if (store) {\n    store.registerModule(moduleName, {\n      state: {\n        routes: Routes\n      },\n      mutations: {\n        // 完整的参数 (state, {to, from, name})\n        // 因为ESLint的检测，去掉了部分未用的参数\n        'navigation/FORWARD': (state, { name }) => {\n          state.routes.push(name);\n        },\n        'navigation/BACK': (state, { count }) => {\n          state.routes.splice(state.routes.length - count, count);\n        },\n        'navigation/REPLACE': (state, { name }) => {\n          state.routes.splice(Routes.length - 1, 1, name);\n        },\n        'navigation/REFRESH': () => {},\n        'navigation/RESET': state => {\n          state.routes.splice(0, state.routes.length);\n        }\n      }\n    });\n  }\n\n  const forward = (name, toRoute, fromRoute) => {\n    const to = { route: toRoute };\n    const from = { route: fromRoute };\n    const routes = store ? store.state[moduleName].routes : Routes;\n    // if from does not exist, it will be set null\n    from.name = routes[routes.length - 1] || null;\n    to.name = name;\n    store\n      ? store.commit('navigation/FORWARD', { to, from, name })\n      : routes.push(name);\n    window.sessionStorage.VUE_NAVIGATION = JSON.stringify(routes);\n    bus.$emit('forward', to, from);\n  };\n  const back = (count, toRoute, fromRoute) => {\n    const to = { route: toRoute };\n    const from = { route: fromRoute };\n    const routes = store ? store.state[moduleName].routes : Routes;\n    from.name = routes[routes.length - 1];\n    to.name = routes[routes.length - 1 - count];\n    store\n      ? store.commit('navigation/BACK', { to, from, count })\n      : routes.splice(Routes.length - count, count);\n    window.sessionStorage.VUE_NAVIGATION = JSON.stringify(routes);\n    bus.$emit('back', to, from);\n  };\n  const replace = (name, toRoute, fromRoute) => {\n    const to = { route: toRoute };\n    const from = { route: fromRoute };\n    const routes = store ? store.state[moduleName].routes : Routes;\n    // if from does not exist, it will be set null\n    from.name = routes[routes.length - 1] || null;\n    to.name = name;\n    store\n      ? store.commit('navigation/REPLACE', { to, from, name })\n      : routes.splice(Routes.length - 1, 1, name);\n    window.sessionStorage.VUE_NAVIGATION = JSON.stringify(routes);\n    bus.$emit('replace', to, from);\n  };\n  const refresh = (toRoute, fromRoute) => {\n    const to = { route: toRoute };\n    const from = { route: fromRoute };\n    const routes = store ? store.state[moduleName].routes : Routes;\n    to.name = from.name = routes[routes.length - 1];\n    store ? store.commit('navigation/REFRESH', { to, from }) : null;\n    bus.$emit('refresh', to, from);\n  };\n  const reset = () => {\n    store ? store.commit('navigation/RESET') : Routes.splice(0, Routes.length);\n    window.sessionStorage.VUE_NAVIGATION = JSON.stringify([]);\n    bus.$emit('reset');\n  };\n\n  const record = (toRoute, fromRoute, replaceFlag) => {\n    const name = getKey(toRoute, keyName);\n    if (replaceFlag) {\n      replace(name, toRoute, fromRoute);\n    } else {\n      const toIndex = Routes.lastIndexOf(name);\n      if (toIndex === -1) {\n        forward(name, toRoute, fromRoute);\n      } else if (toIndex === Routes.length - 1) {\n        refresh(toRoute, fromRoute);\n      } else {\n        back(Routes.length - 1 - toIndex, toRoute, fromRoute);\n      }\n    }\n  };\n\n  return {\n    record,\n    reset\n  };\n};\n"]}]}